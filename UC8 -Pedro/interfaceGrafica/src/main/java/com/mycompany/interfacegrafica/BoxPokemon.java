/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.interfacegrafica;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author PEDROMACHADODASILVA
 */
public class BoxPokemon extends javax.swing.JFrame {
    DefaultListModel<String> modelBox = new DefaultListModel<>();
    DefaultListModel<String> modelBackpack = new DefaultListModel<>();
    /**
     * Creates new form BoxPokemon
     */
    public BoxPokemon() {
        initComponents();
        computerList.setModel(modelBox);
        backpackList.setModel(modelBackpack);
         modelBox.addElement(pk1.getName() + " Type: " + pk1.getType() + "  lvl" + pk1.getLevel());
        modelBox.addElement(pk2.getName() + " Type: " + pk2.getType()+ "  lvl"  + pk2.getLevel() );
        modelBox.addElement(pk3.getName()  + " Type: " + pk3.getType() + "  lvl" + pk3.getLevel());
        modelBox.addElement(pk4.getName() + " Type: "+ pk4.getType() + "  lvl" +  pk4.getLevel());
        modelBox.addElement(pk5.getName() + " Type: "+ pk5.getType() + "  lvl" + pk5.getLevel());
        modelBox.addElement(pk6.getName() + " Type: "+ pk6.getType() + "  lvl" + pk6.getLevel());
        modelBox.addElement(pk7.getName() + " Type: "+ pk7.getType() + "  lvl" + pk7.getLevel());
        modelBox.addElement(pk8.getName() + " Type: "+ pk8.getType() + "  lvl" + pk8.getLevel());
        modelBox.addElement(pk9.getName() + " Type: "+ pk9.getType() + "  lvl" + pk9.getLevel());
        modelBox.addElement(pk10.getName() + " Type: "+ pk10.getType() + "  lvl" + pk10.getLevel());
        
    }
    
    
    public class Pokemon {
    private String name;
    private String type;
    private int level;
    
    public Pokemon(String name, String type, int level){
    this.name = name;
    this.type = type;
    this.level = level;
    }
    
    public String getName(){
        return name;
    }
    
    public String getType(){
        return type;
    }
    
    public int getLevel(){
        return level;
    }
    
}
    Pokemon pk1 = new Pokemon("Charmander","Fire",14);
    Pokemon pk2 = new Pokemon("Pikachu","Eletric",20);
    Pokemon pk3 = new Pokemon("Raichu","eletric",37);
    Pokemon pk4 = new Pokemon("Mew","Psychic",50);
    Pokemon pk5 = new Pokemon("Mewtwo","Psychic",70);
    Pokemon pk6 = new Pokemon("Ho-oh","Fire",60);
    Pokemon pk7 = new Pokemon("Lugia","Psychic",60);
    Pokemon pk8 = new Pokemon("Greninja","Water",37);
    Pokemon pk9 = new Pokemon("Zygard","Ground",70);
    Pokemon pk10 = new Pokemon("Regieleki","Eletric",50);
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        backpackList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        computerList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addComputer = new javax.swing.JButton();
        addBackpack1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backpackList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(backpackList);

        computerList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(computerList);

        jLabel1.setText("Computer");

        jLabel2.setText("Backpack");

        addComputer.setText("Add to computer");
        addComputer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addComputerActionPerformed(evt);
            }
        });

        addBackpack1.setText("Add to backpack");
        addBackpack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBackpack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBackpack1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addComputer, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addComputer, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBackpack1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addComputerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addComputerActionPerformed
        int [] SelectedIndices = backpackList.getSelectedIndices();
        
        if(SelectedIndices.length > 0){
            for(int i = SelectedIndices.length - 1; i >= 0; i--){
                int index = SelectedIndices[i];
                modelBox.addElement(modelBackpack.getElementAt(index));
                modelBackpack.remove(index);
            }
        }
    }//GEN-LAST:event_addComputerActionPerformed

    private void addBackpack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBackpack1ActionPerformed
        int [] SelectedIndices = computerList.getSelectedIndices();
        if(SelectedIndices.length > 0 && (modelBox.getSize()  + SelectedIndices.length <= 6)){
                for(int i = SelectedIndices.length - 1; i >= 0; i--){
                int index = SelectedIndices[i];
                modelBackpack.addElement(modelBox.getElementAt(index));
                modelBox.remove(index);
                     
            }
        
        }
        
        
        
    }//GEN-LAST:event_addBackpack1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BoxPokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BoxPokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BoxPokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BoxPokemon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BoxPokemon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBackpack1;
    private javax.swing.JButton addComputer;
    private javax.swing.JList<String> backpackList;
    private javax.swing.JList<String> computerList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
